# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from rpc_delete import auth_pb2 as rpc__delete_dot_auth__pb2
from rpc_forgot import auth_pb2 as rpc__forgot_dot_auth__pb2
from rpc_health import auth_pb2 as rpc__health_dot_auth__pb2
from rpc_refresh import auth_pb2 as rpc__refresh_dot_auth__pb2
from rpc_signin import auth_pb2 as rpc__signin_dot_auth__pb2
from rpc_signout import auth_pb2 as rpc__signout_dot_auth__pb2
from rpc_signup import auth_pb2 as rpc__signup_dot_auth__pb2
from rpc_users import auth_pb2 as rpc__users_dot_auth__pb2
from rpc_verify import auth_pb2 as rpc__verify_dot_auth__pb2
from rpc_welcome import auth_pb2 as rpc__welcome_dot_auth__pb2


class AuthStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AuthWelcome = channel.unary_unary(
                '/auth.Auth/AuthWelcome',
                request_serializer=rpc__welcome_dot_auth__pb2.AuthWelcomeRequest.SerializeToString,
                response_deserializer=rpc__welcome_dot_auth__pb2.AuthWelcomeResponse.FromString,
                )
        self.AuthHealth = channel.unary_unary(
                '/auth.Auth/AuthHealth',
                request_serializer=rpc__health_dot_auth__pb2.AuthHealthRequest.SerializeToString,
                response_deserializer=rpc__health_dot_auth__pb2.AuthHealthResponse.FromString,
                )
        self.AuthSignup = channel.unary_unary(
                '/auth.Auth/AuthSignup',
                request_serializer=rpc__signup_dot_auth__pb2.AuthSignupRequest.SerializeToString,
                response_deserializer=rpc__signup_dot_auth__pb2.AuthSignupResponse.FromString,
                )
        self.AuthSignin = channel.unary_unary(
                '/auth.Auth/AuthSignin',
                request_serializer=rpc__signin_dot_auth__pb2.AuthSigninRequest.SerializeToString,
                response_deserializer=rpc__signin_dot_auth__pb2.AuthSigninResponse.FromString,
                )
        self.AuthSignout = channel.unary_unary(
                '/auth.Auth/AuthSignout',
                request_serializer=rpc__signout_dot_auth__pb2.AuthSignoutRequest.SerializeToString,
                response_deserializer=rpc__signout_dot_auth__pb2.AuthSignoutResponse.FromString,
                )
        self.AuthRefreshToken = channel.unary_unary(
                '/auth.Auth/AuthRefreshToken',
                request_serializer=rpc__refresh_dot_auth__pb2.AuthRefreshTokenRequest.SerializeToString,
                response_deserializer=rpc__refresh_dot_auth__pb2.AuthRefreshTokenResponse.FromString,
                )
        self.AuthRequestEmailVerification = channel.unary_unary(
                '/auth.Auth/AuthRequestEmailVerification',
                request_serializer=rpc__verify_dot_auth__pb2.AuthRequestEmailVerificationRequest.SerializeToString,
                response_deserializer=rpc__verify_dot_auth__pb2.AuthRequestEmailVerificationResponse.FromString,
                )
        self.AuthVerifyEmail = channel.unary_unary(
                '/auth.Auth/AuthVerifyEmail',
                request_serializer=rpc__verify_dot_auth__pb2.AuthVerifyEmailRequest.SerializeToString,
                response_deserializer=rpc__verify_dot_auth__pb2.AuthVerifyEmailResponse.FromString,
                )
        self.AuthForgotPassword = channel.unary_unary(
                '/auth.Auth/AuthForgotPassword',
                request_serializer=rpc__forgot_dot_auth__pb2.AuthForgotPasswordRequest.SerializeToString,
                response_deserializer=rpc__forgot_dot_auth__pb2.AuthForgotPasswordResponse.FromString,
                )
        self.AuthResetPassword = channel.unary_unary(
                '/auth.Auth/AuthResetPassword',
                request_serializer=rpc__forgot_dot_auth__pb2.AuthResetPasswordRequest.SerializeToString,
                response_deserializer=rpc__forgot_dot_auth__pb2.AuthResetPasswordResponse.FromString,
                )
        self.AuthDeleteAccount = channel.unary_unary(
                '/auth.Auth/AuthDeleteAccount',
                request_serializer=rpc__delete_dot_auth__pb2.AuthDeleteAccountRequest.SerializeToString,
                response_deserializer=rpc__delete_dot_auth__pb2.AuthDeleteAccountResponse.FromString,
                )
        self.AuthUsers = channel.unary_unary(
                '/auth.Auth/AuthUsers',
                request_serializer=rpc__users_dot_auth__pb2.AuthUsersRequest.SerializeToString,
                response_deserializer=rpc__users_dot_auth__pb2.AuthUsersResponse.FromString,
                )
        self.AuthUser = channel.unary_unary(
                '/auth.Auth/AuthUser',
                request_serializer=rpc__users_dot_auth__pb2.AuthUserRequest.SerializeToString,
                response_deserializer=rpc__users_dot_auth__pb2.AuthUserResponse.FromString,
                )


class AuthServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AuthWelcome(self, request, context):
        """------------------------------------------------------------ Signup
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthHealth(self, request, context):
        """------------------------------------------------------------ Signup
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthSignup(self, request, context):
        """------------------------------------------------------------ Signup
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthSignin(self, request, context):
        """------------------------------------------------------------ Signin
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthSignout(self, request, context):
        """------------------------------------------------------------ Signout
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthRefreshToken(self, request, context):
        """------------------------------------------------------------ Refresh
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthRequestEmailVerification(self, request, context):
        """------------------------------------------------------------ Request Email Verification
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthVerifyEmail(self, request, context):
        """------------------------------------------------------------ Verify Email with verification code
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthForgotPassword(self, request, context):
        """------------------------------------------------------------ Forogt Password ? Request reset code
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthResetPassword(self, request, context):
        """------------------------------------------------------------ Reset Password
        If Account is not verified then we will directly delete it
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthDeleteAccount(self, request, context):
        """------------------------------------------------------------ Deletion
        If Account is not verified then we will directly delete it
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthUsers(self, request, context):
        """------------------------------------------------------------ Users
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthUser(self, request, context):
        """------------------------------------------------------------ User
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AuthWelcome': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthWelcome,
                    request_deserializer=rpc__welcome_dot_auth__pb2.AuthWelcomeRequest.FromString,
                    response_serializer=rpc__welcome_dot_auth__pb2.AuthWelcomeResponse.SerializeToString,
            ),
            'AuthHealth': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthHealth,
                    request_deserializer=rpc__health_dot_auth__pb2.AuthHealthRequest.FromString,
                    response_serializer=rpc__health_dot_auth__pb2.AuthHealthResponse.SerializeToString,
            ),
            'AuthSignup': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthSignup,
                    request_deserializer=rpc__signup_dot_auth__pb2.AuthSignupRequest.FromString,
                    response_serializer=rpc__signup_dot_auth__pb2.AuthSignupResponse.SerializeToString,
            ),
            'AuthSignin': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthSignin,
                    request_deserializer=rpc__signin_dot_auth__pb2.AuthSigninRequest.FromString,
                    response_serializer=rpc__signin_dot_auth__pb2.AuthSigninResponse.SerializeToString,
            ),
            'AuthSignout': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthSignout,
                    request_deserializer=rpc__signout_dot_auth__pb2.AuthSignoutRequest.FromString,
                    response_serializer=rpc__signout_dot_auth__pb2.AuthSignoutResponse.SerializeToString,
            ),
            'AuthRefreshToken': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthRefreshToken,
                    request_deserializer=rpc__refresh_dot_auth__pb2.AuthRefreshTokenRequest.FromString,
                    response_serializer=rpc__refresh_dot_auth__pb2.AuthRefreshTokenResponse.SerializeToString,
            ),
            'AuthRequestEmailVerification': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthRequestEmailVerification,
                    request_deserializer=rpc__verify_dot_auth__pb2.AuthRequestEmailVerificationRequest.FromString,
                    response_serializer=rpc__verify_dot_auth__pb2.AuthRequestEmailVerificationResponse.SerializeToString,
            ),
            'AuthVerifyEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthVerifyEmail,
                    request_deserializer=rpc__verify_dot_auth__pb2.AuthVerifyEmailRequest.FromString,
                    response_serializer=rpc__verify_dot_auth__pb2.AuthVerifyEmailResponse.SerializeToString,
            ),
            'AuthForgotPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthForgotPassword,
                    request_deserializer=rpc__forgot_dot_auth__pb2.AuthForgotPasswordRequest.FromString,
                    response_serializer=rpc__forgot_dot_auth__pb2.AuthForgotPasswordResponse.SerializeToString,
            ),
            'AuthResetPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthResetPassword,
                    request_deserializer=rpc__forgot_dot_auth__pb2.AuthResetPasswordRequest.FromString,
                    response_serializer=rpc__forgot_dot_auth__pb2.AuthResetPasswordResponse.SerializeToString,
            ),
            'AuthDeleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthDeleteAccount,
                    request_deserializer=rpc__delete_dot_auth__pb2.AuthDeleteAccountRequest.FromString,
                    response_serializer=rpc__delete_dot_auth__pb2.AuthDeleteAccountResponse.SerializeToString,
            ),
            'AuthUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthUsers,
                    request_deserializer=rpc__users_dot_auth__pb2.AuthUsersRequest.FromString,
                    response_serializer=rpc__users_dot_auth__pb2.AuthUsersResponse.SerializeToString,
            ),
            'AuthUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthUser,
                    request_deserializer=rpc__users_dot_auth__pb2.AuthUserRequest.FromString,
                    response_serializer=rpc__users_dot_auth__pb2.AuthUserResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'auth.Auth', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Auth(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AuthWelcome(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/auth.Auth/AuthWelcome',
            rpc__welcome_dot_auth__pb2.AuthWelcomeRequest.SerializeToString,
            rpc__welcome_dot_auth__pb2.AuthWelcomeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthHealth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/auth.Auth/AuthHealth',
            rpc__health_dot_auth__pb2.AuthHealthRequest.SerializeToString,
            rpc__health_dot_auth__pb2.AuthHealthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthSignup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/auth.Auth/AuthSignup',
            rpc__signup_dot_auth__pb2.AuthSignupRequest.SerializeToString,
            rpc__signup_dot_auth__pb2.AuthSignupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthSignin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/auth.Auth/AuthSignin',
            rpc__signin_dot_auth__pb2.AuthSigninRequest.SerializeToString,
            rpc__signin_dot_auth__pb2.AuthSigninResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthSignout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/auth.Auth/AuthSignout',
            rpc__signout_dot_auth__pb2.AuthSignoutRequest.SerializeToString,
            rpc__signout_dot_auth__pb2.AuthSignoutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthRefreshToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/auth.Auth/AuthRefreshToken',
            rpc__refresh_dot_auth__pb2.AuthRefreshTokenRequest.SerializeToString,
            rpc__refresh_dot_auth__pb2.AuthRefreshTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthRequestEmailVerification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/auth.Auth/AuthRequestEmailVerification',
            rpc__verify_dot_auth__pb2.AuthRequestEmailVerificationRequest.SerializeToString,
            rpc__verify_dot_auth__pb2.AuthRequestEmailVerificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthVerifyEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/auth.Auth/AuthVerifyEmail',
            rpc__verify_dot_auth__pb2.AuthVerifyEmailRequest.SerializeToString,
            rpc__verify_dot_auth__pb2.AuthVerifyEmailResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthForgotPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/auth.Auth/AuthForgotPassword',
            rpc__forgot_dot_auth__pb2.AuthForgotPasswordRequest.SerializeToString,
            rpc__forgot_dot_auth__pb2.AuthForgotPasswordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthResetPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/auth.Auth/AuthResetPassword',
            rpc__forgot_dot_auth__pb2.AuthResetPasswordRequest.SerializeToString,
            rpc__forgot_dot_auth__pb2.AuthResetPasswordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthDeleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/auth.Auth/AuthDeleteAccount',
            rpc__delete_dot_auth__pb2.AuthDeleteAccountRequest.SerializeToString,
            rpc__delete_dot_auth__pb2.AuthDeleteAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/auth.Auth/AuthUsers',
            rpc__users_dot_auth__pb2.AuthUsersRequest.SerializeToString,
            rpc__users_dot_auth__pb2.AuthUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/auth.Auth/AuthUser',
            rpc__users_dot_auth__pb2.AuthUserRequest.SerializeToString,
            rpc__users_dot_auth__pb2.AuthUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
