/**
 * @fileoverview gRPC-Web generated client stub for utils
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.21.12
// source: service.utils.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_api_annotations_pb = require('./google/api/annotations_pb.js')

var protoc$gen$openapiv2_options_annotations_pb = require('./protoc-gen-openapiv2/options/annotations_pb.js')

var rpc$health_utils_pb = require('./rpc-health.utils_pb.js')

var rpc$welcome_utils_pb = require('./rpc-welcome.utils_pb.js')

var rpc$useragent_utils_pb = require('./rpc-useragent.utils_pb.js')

var rpc$proxies_utils_pb = require('./rpc-proxies.utils_pb.js')
const proto = {};
proto.utils = require('./service.utils_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.utils.UtilsClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.utils.UtilsPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.utils.UtilsWelcomeRequest,
 *   !proto.utils.UtilsWelcomeResponse>}
 */
const methodDescriptor_Utils_UtilsWelcome = new grpc.web.MethodDescriptor(
  '/utils.Utils/UtilsWelcome',
  grpc.web.MethodType.UNARY,
  rpc$welcome_utils_pb.UtilsWelcomeRequest,
  rpc$welcome_utils_pb.UtilsWelcomeResponse,
  /**
   * @param {!proto.utils.UtilsWelcomeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$welcome_utils_pb.UtilsWelcomeResponse.deserializeBinary
);


/**
 * @param {!proto.utils.UtilsWelcomeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.utils.UtilsWelcomeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.utils.UtilsWelcomeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.utils.UtilsClient.prototype.utilsWelcome =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/utils.Utils/UtilsWelcome',
      request,
      metadata || {},
      methodDescriptor_Utils_UtilsWelcome,
      callback);
};


/**
 * @param {!proto.utils.UtilsWelcomeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.utils.UtilsWelcomeResponse>}
 *     Promise that resolves to the response
 */
proto.utils.UtilsPromiseClient.prototype.utilsWelcome =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/utils.Utils/UtilsWelcome',
      request,
      metadata || {},
      methodDescriptor_Utils_UtilsWelcome);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.utils.UtilsHealthRequest,
 *   !proto.utils.UtilsHealthResponse>}
 */
const methodDescriptor_Utils_UtilsHealth = new grpc.web.MethodDescriptor(
  '/utils.Utils/UtilsHealth',
  grpc.web.MethodType.UNARY,
  rpc$health_utils_pb.UtilsHealthRequest,
  rpc$health_utils_pb.UtilsHealthResponse,
  /**
   * @param {!proto.utils.UtilsHealthRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$health_utils_pb.UtilsHealthResponse.deserializeBinary
);


/**
 * @param {!proto.utils.UtilsHealthRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.utils.UtilsHealthResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.utils.UtilsHealthResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.utils.UtilsClient.prototype.utilsHealth =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/utils.Utils/UtilsHealth',
      request,
      metadata || {},
      methodDescriptor_Utils_UtilsHealth,
      callback);
};


/**
 * @param {!proto.utils.UtilsHealthRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.utils.UtilsHealthResponse>}
 *     Promise that resolves to the response
 */
proto.utils.UtilsPromiseClient.prototype.utilsHealth =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/utils.Utils/UtilsHealth',
      request,
      metadata || {},
      methodDescriptor_Utils_UtilsHealth);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.utils.UtilsUserAgentsRequest,
 *   !proto.utils.UtilsUserAgentsResponse>}
 */
const methodDescriptor_Utils_UtilsUserAgents = new grpc.web.MethodDescriptor(
  '/utils.Utils/UtilsUserAgents',
  grpc.web.MethodType.UNARY,
  rpc$useragent_utils_pb.UtilsUserAgentsRequest,
  rpc$useragent_utils_pb.UtilsUserAgentsResponse,
  /**
   * @param {!proto.utils.UtilsUserAgentsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$useragent_utils_pb.UtilsUserAgentsResponse.deserializeBinary
);


/**
 * @param {!proto.utils.UtilsUserAgentsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.utils.UtilsUserAgentsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.utils.UtilsUserAgentsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.utils.UtilsClient.prototype.utilsUserAgents =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/utils.Utils/UtilsUserAgents',
      request,
      metadata || {},
      methodDescriptor_Utils_UtilsUserAgents,
      callback);
};


/**
 * @param {!proto.utils.UtilsUserAgentsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.utils.UtilsUserAgentsResponse>}
 *     Promise that resolves to the response
 */
proto.utils.UtilsPromiseClient.prototype.utilsUserAgents =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/utils.Utils/UtilsUserAgents',
      request,
      metadata || {},
      methodDescriptor_Utils_UtilsUserAgents);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.utils.UtilsUserAgentsPoolRequest,
 *   !proto.utils.UtilsUserAgentsPoolResponse>}
 */
const methodDescriptor_Utils_UtilsUserAgentsPool = new grpc.web.MethodDescriptor(
  '/utils.Utils/UtilsUserAgentsPool',
  grpc.web.MethodType.UNARY,
  rpc$useragent_utils_pb.UtilsUserAgentsPoolRequest,
  rpc$useragent_utils_pb.UtilsUserAgentsPoolResponse,
  /**
   * @param {!proto.utils.UtilsUserAgentsPoolRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$useragent_utils_pb.UtilsUserAgentsPoolResponse.deserializeBinary
);


/**
 * @param {!proto.utils.UtilsUserAgentsPoolRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.utils.UtilsUserAgentsPoolResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.utils.UtilsUserAgentsPoolResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.utils.UtilsClient.prototype.utilsUserAgentsPool =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/utils.Utils/UtilsUserAgentsPool',
      request,
      metadata || {},
      methodDescriptor_Utils_UtilsUserAgentsPool,
      callback);
};


/**
 * @param {!proto.utils.UtilsUserAgentsPoolRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.utils.UtilsUserAgentsPoolResponse>}
 *     Promise that resolves to the response
 */
proto.utils.UtilsPromiseClient.prototype.utilsUserAgentsPool =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/utils.Utils/UtilsUserAgentsPool',
      request,
      metadata || {},
      methodDescriptor_Utils_UtilsUserAgentsPool);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.utils.UtilsUserAgentsPoolNamesRequest,
 *   !proto.utils.UtilsUserAgentsPoolNamesResponse>}
 */
const methodDescriptor_Utils_UtilsUserAgentsPoolNames = new grpc.web.MethodDescriptor(
  '/utils.Utils/UtilsUserAgentsPoolNames',
  grpc.web.MethodType.UNARY,
  rpc$useragent_utils_pb.UtilsUserAgentsPoolNamesRequest,
  rpc$useragent_utils_pb.UtilsUserAgentsPoolNamesResponse,
  /**
   * @param {!proto.utils.UtilsUserAgentsPoolNamesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$useragent_utils_pb.UtilsUserAgentsPoolNamesResponse.deserializeBinary
);


/**
 * @param {!proto.utils.UtilsUserAgentsPoolNamesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.utils.UtilsUserAgentsPoolNamesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.utils.UtilsUserAgentsPoolNamesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.utils.UtilsClient.prototype.utilsUserAgentsPoolNames =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/utils.Utils/UtilsUserAgentsPoolNames',
      request,
      metadata || {},
      methodDescriptor_Utils_UtilsUserAgentsPoolNames,
      callback);
};


/**
 * @param {!proto.utils.UtilsUserAgentsPoolNamesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.utils.UtilsUserAgentsPoolNamesResponse>}
 *     Promise that resolves to the response
 */
proto.utils.UtilsPromiseClient.prototype.utilsUserAgentsPoolNames =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/utils.Utils/UtilsUserAgentsPoolNames',
      request,
      metadata || {},
      methodDescriptor_Utils_UtilsUserAgentsPoolNames);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.utils.UtilsProxiesRequest,
 *   !proto.utils.UtilsProxiesResponse>}
 */
const methodDescriptor_Utils_UtilsProxies = new grpc.web.MethodDescriptor(
  '/utils.Utils/UtilsProxies',
  grpc.web.MethodType.UNARY,
  rpc$proxies_utils_pb.UtilsProxiesRequest,
  rpc$proxies_utils_pb.UtilsProxiesResponse,
  /**
   * @param {!proto.utils.UtilsProxiesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$proxies_utils_pb.UtilsProxiesResponse.deserializeBinary
);


/**
 * @param {!proto.utils.UtilsProxiesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.utils.UtilsProxiesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.utils.UtilsProxiesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.utils.UtilsClient.prototype.utilsProxies =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/utils.Utils/UtilsProxies',
      request,
      metadata || {},
      methodDescriptor_Utils_UtilsProxies,
      callback);
};


/**
 * @param {!proto.utils.UtilsProxiesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.utils.UtilsProxiesResponse>}
 *     Promise that resolves to the response
 */
proto.utils.UtilsPromiseClient.prototype.utilsProxies =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/utils.Utils/UtilsProxies',
      request,
      metadata || {},
      methodDescriptor_Utils_UtilsProxies);
};


module.exports = proto.utils;

