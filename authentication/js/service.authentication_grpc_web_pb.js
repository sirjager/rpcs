/**
 * @fileoverview gRPC-Web generated client stub for authentication
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.21.12
// source: service.authentication.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_api_annotations_pb = require('./google/api/annotations_pb.js')

var protoc$gen$openapiv2_options_annotations_pb = require('./protoc-gen-openapiv2/options/annotations_pb.js')

var rpc$welcome_authentication_pb = require('./rpc-welcome.authentication_pb.js')

var rpc$health_authentication_pb = require('./rpc-health.authentication_pb.js')

var rpc$signup_authentication_pb = require('./rpc-signup.authentication_pb.js')

var rpc$signin_authentication_pb = require('./rpc-signin.authentication_pb.js')

var rpc$signout_authentication_pb = require('./rpc-signout.authentication_pb.js')

var rpc$refresh_authentication_pb = require('./rpc-refresh.authentication_pb.js')

var rpc$verify_authentication_pb = require('./rpc-verify.authentication_pb.js')

var rpc$forgot_authentication_pb = require('./rpc-forgot.authentication_pb.js')

var rpc$delete_authentication_pb = require('./rpc-delete.authentication_pb.js')

var rpc$users_authentication_pb = require('./rpc-users.authentication_pb.js')
const proto = {};
proto.authentication = require('./service.authentication_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.authentication.AuthenticationClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.authentication.AuthenticationPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.authentication.AuthenticationWelcomeRequest,
 *   !proto.authentication.AuthenticationWelcomeResponse>}
 */
const methodDescriptor_Authentication_AuthenticationWelcome = new grpc.web.MethodDescriptor(
  '/authentication.Authentication/AuthenticationWelcome',
  grpc.web.MethodType.UNARY,
  rpc$welcome_authentication_pb.AuthenticationWelcomeRequest,
  rpc$welcome_authentication_pb.AuthenticationWelcomeResponse,
  /**
   * @param {!proto.authentication.AuthenticationWelcomeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$welcome_authentication_pb.AuthenticationWelcomeResponse.deserializeBinary
);


/**
 * @param {!proto.authentication.AuthenticationWelcomeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.authentication.AuthenticationWelcomeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.authentication.AuthenticationWelcomeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.authentication.AuthenticationClient.prototype.authenticationWelcome =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationWelcome',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationWelcome,
      callback);
};


/**
 * @param {!proto.authentication.AuthenticationWelcomeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.authentication.AuthenticationWelcomeResponse>}
 *     Promise that resolves to the response
 */
proto.authentication.AuthenticationPromiseClient.prototype.authenticationWelcome =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationWelcome',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationWelcome);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.authentication.AuthenticationHealthRequest,
 *   !proto.authentication.AuthenticationHealthResponse>}
 */
const methodDescriptor_Authentication_AuthenticationHealth = new grpc.web.MethodDescriptor(
  '/authentication.Authentication/AuthenticationHealth',
  grpc.web.MethodType.UNARY,
  rpc$health_authentication_pb.AuthenticationHealthRequest,
  rpc$health_authentication_pb.AuthenticationHealthResponse,
  /**
   * @param {!proto.authentication.AuthenticationHealthRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$health_authentication_pb.AuthenticationHealthResponse.deserializeBinary
);


/**
 * @param {!proto.authentication.AuthenticationHealthRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.authentication.AuthenticationHealthResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.authentication.AuthenticationHealthResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.authentication.AuthenticationClient.prototype.authenticationHealth =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationHealth',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationHealth,
      callback);
};


/**
 * @param {!proto.authentication.AuthenticationHealthRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.authentication.AuthenticationHealthResponse>}
 *     Promise that resolves to the response
 */
proto.authentication.AuthenticationPromiseClient.prototype.authenticationHealth =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationHealth',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationHealth);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.authentication.AuthenticationSignupRequest,
 *   !proto.authentication.AuthenticationSignupResponse>}
 */
const methodDescriptor_Authentication_AuthenticationSignup = new grpc.web.MethodDescriptor(
  '/authentication.Authentication/AuthenticationSignup',
  grpc.web.MethodType.UNARY,
  rpc$signup_authentication_pb.AuthenticationSignupRequest,
  rpc$signup_authentication_pb.AuthenticationSignupResponse,
  /**
   * @param {!proto.authentication.AuthenticationSignupRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$signup_authentication_pb.AuthenticationSignupResponse.deserializeBinary
);


/**
 * @param {!proto.authentication.AuthenticationSignupRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.authentication.AuthenticationSignupResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.authentication.AuthenticationSignupResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.authentication.AuthenticationClient.prototype.authenticationSignup =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationSignup',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationSignup,
      callback);
};


/**
 * @param {!proto.authentication.AuthenticationSignupRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.authentication.AuthenticationSignupResponse>}
 *     Promise that resolves to the response
 */
proto.authentication.AuthenticationPromiseClient.prototype.authenticationSignup =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationSignup',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationSignup);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.authentication.AuthenticationSigninRequest,
 *   !proto.authentication.AuthenticationSigninResponse>}
 */
const methodDescriptor_Authentication_AuthenticationSignin = new grpc.web.MethodDescriptor(
  '/authentication.Authentication/AuthenticationSignin',
  grpc.web.MethodType.UNARY,
  rpc$signin_authentication_pb.AuthenticationSigninRequest,
  rpc$signin_authentication_pb.AuthenticationSigninResponse,
  /**
   * @param {!proto.authentication.AuthenticationSigninRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$signin_authentication_pb.AuthenticationSigninResponse.deserializeBinary
);


/**
 * @param {!proto.authentication.AuthenticationSigninRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.authentication.AuthenticationSigninResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.authentication.AuthenticationSigninResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.authentication.AuthenticationClient.prototype.authenticationSignin =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationSignin',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationSignin,
      callback);
};


/**
 * @param {!proto.authentication.AuthenticationSigninRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.authentication.AuthenticationSigninResponse>}
 *     Promise that resolves to the response
 */
proto.authentication.AuthenticationPromiseClient.prototype.authenticationSignin =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationSignin',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationSignin);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.authentication.AuthenticationSignoutRequest,
 *   !proto.authentication.AuthenticationSignoutResponse>}
 */
const methodDescriptor_Authentication_AuthenticationSignout = new grpc.web.MethodDescriptor(
  '/authentication.Authentication/AuthenticationSignout',
  grpc.web.MethodType.UNARY,
  rpc$signout_authentication_pb.AuthenticationSignoutRequest,
  rpc$signout_authentication_pb.AuthenticationSignoutResponse,
  /**
   * @param {!proto.authentication.AuthenticationSignoutRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$signout_authentication_pb.AuthenticationSignoutResponse.deserializeBinary
);


/**
 * @param {!proto.authentication.AuthenticationSignoutRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.authentication.AuthenticationSignoutResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.authentication.AuthenticationSignoutResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.authentication.AuthenticationClient.prototype.authenticationSignout =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationSignout',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationSignout,
      callback);
};


/**
 * @param {!proto.authentication.AuthenticationSignoutRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.authentication.AuthenticationSignoutResponse>}
 *     Promise that resolves to the response
 */
proto.authentication.AuthenticationPromiseClient.prototype.authenticationSignout =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationSignout',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationSignout);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.authentication.AuthenticationRefreshTokenRequest,
 *   !proto.authentication.AuthenticationRefreshTokenResponse>}
 */
const methodDescriptor_Authentication_AuthenticationRefreshToken = new grpc.web.MethodDescriptor(
  '/authentication.Authentication/AuthenticationRefreshToken',
  grpc.web.MethodType.UNARY,
  rpc$refresh_authentication_pb.AuthenticationRefreshTokenRequest,
  rpc$refresh_authentication_pb.AuthenticationRefreshTokenResponse,
  /**
   * @param {!proto.authentication.AuthenticationRefreshTokenRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$refresh_authentication_pb.AuthenticationRefreshTokenResponse.deserializeBinary
);


/**
 * @param {!proto.authentication.AuthenticationRefreshTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.authentication.AuthenticationRefreshTokenResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.authentication.AuthenticationRefreshTokenResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.authentication.AuthenticationClient.prototype.authenticationRefreshToken =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationRefreshToken',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationRefreshToken,
      callback);
};


/**
 * @param {!proto.authentication.AuthenticationRefreshTokenRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.authentication.AuthenticationRefreshTokenResponse>}
 *     Promise that resolves to the response
 */
proto.authentication.AuthenticationPromiseClient.prototype.authenticationRefreshToken =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationRefreshToken',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationRefreshToken);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.authentication.AuthenticationRequestEmailVerificationRequest,
 *   !proto.authentication.AuthenticationRequestEmailVerificationResponse>}
 */
const methodDescriptor_Authentication_AuthenticationRequestEmailVerification = new grpc.web.MethodDescriptor(
  '/authentication.Authentication/AuthenticationRequestEmailVerification',
  grpc.web.MethodType.UNARY,
  rpc$verify_authentication_pb.AuthenticationRequestEmailVerificationRequest,
  rpc$verify_authentication_pb.AuthenticationRequestEmailVerificationResponse,
  /**
   * @param {!proto.authentication.AuthenticationRequestEmailVerificationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$verify_authentication_pb.AuthenticationRequestEmailVerificationResponse.deserializeBinary
);


/**
 * @param {!proto.authentication.AuthenticationRequestEmailVerificationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.authentication.AuthenticationRequestEmailVerificationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.authentication.AuthenticationRequestEmailVerificationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.authentication.AuthenticationClient.prototype.authenticationRequestEmailVerification =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationRequestEmailVerification',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationRequestEmailVerification,
      callback);
};


/**
 * @param {!proto.authentication.AuthenticationRequestEmailVerificationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.authentication.AuthenticationRequestEmailVerificationResponse>}
 *     Promise that resolves to the response
 */
proto.authentication.AuthenticationPromiseClient.prototype.authenticationRequestEmailVerification =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationRequestEmailVerification',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationRequestEmailVerification);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.authentication.AuthenticationVerifyEmailRequest,
 *   !proto.authentication.AuthenticationVerifyEmailResponse>}
 */
const methodDescriptor_Authentication_AuthenticationVerifyEmail = new grpc.web.MethodDescriptor(
  '/authentication.Authentication/AuthenticationVerifyEmail',
  grpc.web.MethodType.UNARY,
  rpc$verify_authentication_pb.AuthenticationVerifyEmailRequest,
  rpc$verify_authentication_pb.AuthenticationVerifyEmailResponse,
  /**
   * @param {!proto.authentication.AuthenticationVerifyEmailRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$verify_authentication_pb.AuthenticationVerifyEmailResponse.deserializeBinary
);


/**
 * @param {!proto.authentication.AuthenticationVerifyEmailRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.authentication.AuthenticationVerifyEmailResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.authentication.AuthenticationVerifyEmailResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.authentication.AuthenticationClient.prototype.authenticationVerifyEmail =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationVerifyEmail',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationVerifyEmail,
      callback);
};


/**
 * @param {!proto.authentication.AuthenticationVerifyEmailRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.authentication.AuthenticationVerifyEmailResponse>}
 *     Promise that resolves to the response
 */
proto.authentication.AuthenticationPromiseClient.prototype.authenticationVerifyEmail =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationVerifyEmail',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationVerifyEmail);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.authentication.AuthenticationForgotPasswordRequest,
 *   !proto.authentication.AuthenticationForgotPasswordResponse>}
 */
const methodDescriptor_Authentication_AuthenticationForgotPassword = new grpc.web.MethodDescriptor(
  '/authentication.Authentication/AuthenticationForgotPassword',
  grpc.web.MethodType.UNARY,
  rpc$forgot_authentication_pb.AuthenticationForgotPasswordRequest,
  rpc$forgot_authentication_pb.AuthenticationForgotPasswordResponse,
  /**
   * @param {!proto.authentication.AuthenticationForgotPasswordRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$forgot_authentication_pb.AuthenticationForgotPasswordResponse.deserializeBinary
);


/**
 * @param {!proto.authentication.AuthenticationForgotPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.authentication.AuthenticationForgotPasswordResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.authentication.AuthenticationForgotPasswordResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.authentication.AuthenticationClient.prototype.authenticationForgotPassword =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationForgotPassword',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationForgotPassword,
      callback);
};


/**
 * @param {!proto.authentication.AuthenticationForgotPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.authentication.AuthenticationForgotPasswordResponse>}
 *     Promise that resolves to the response
 */
proto.authentication.AuthenticationPromiseClient.prototype.authenticationForgotPassword =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationForgotPassword',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationForgotPassword);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.authentication.AuthenticationResetPasswordRequest,
 *   !proto.authentication.AuthenticationResetPasswordResponse>}
 */
const methodDescriptor_Authentication_AuthenticationResetPassword = new grpc.web.MethodDescriptor(
  '/authentication.Authentication/AuthenticationResetPassword',
  grpc.web.MethodType.UNARY,
  rpc$forgot_authentication_pb.AuthenticationResetPasswordRequest,
  rpc$forgot_authentication_pb.AuthenticationResetPasswordResponse,
  /**
   * @param {!proto.authentication.AuthenticationResetPasswordRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$forgot_authentication_pb.AuthenticationResetPasswordResponse.deserializeBinary
);


/**
 * @param {!proto.authentication.AuthenticationResetPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.authentication.AuthenticationResetPasswordResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.authentication.AuthenticationResetPasswordResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.authentication.AuthenticationClient.prototype.authenticationResetPassword =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationResetPassword',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationResetPassword,
      callback);
};


/**
 * @param {!proto.authentication.AuthenticationResetPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.authentication.AuthenticationResetPasswordResponse>}
 *     Promise that resolves to the response
 */
proto.authentication.AuthenticationPromiseClient.prototype.authenticationResetPassword =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationResetPassword',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationResetPassword);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.authentication.AuthenticationDeleteAccountRequest,
 *   !proto.authentication.AuthenticationDeleteAccountResponse>}
 */
const methodDescriptor_Authentication_AuthenticationDeleteAccount = new grpc.web.MethodDescriptor(
  '/authentication.Authentication/AuthenticationDeleteAccount',
  grpc.web.MethodType.UNARY,
  rpc$delete_authentication_pb.AuthenticationDeleteAccountRequest,
  rpc$delete_authentication_pb.AuthenticationDeleteAccountResponse,
  /**
   * @param {!proto.authentication.AuthenticationDeleteAccountRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$delete_authentication_pb.AuthenticationDeleteAccountResponse.deserializeBinary
);


/**
 * @param {!proto.authentication.AuthenticationDeleteAccountRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.authentication.AuthenticationDeleteAccountResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.authentication.AuthenticationDeleteAccountResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.authentication.AuthenticationClient.prototype.authenticationDeleteAccount =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationDeleteAccount',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationDeleteAccount,
      callback);
};


/**
 * @param {!proto.authentication.AuthenticationDeleteAccountRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.authentication.AuthenticationDeleteAccountResponse>}
 *     Promise that resolves to the response
 */
proto.authentication.AuthenticationPromiseClient.prototype.authenticationDeleteAccount =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationDeleteAccount',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationDeleteAccount);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.authentication.AuthenticationUsersRequest,
 *   !proto.authentication.AuthenticationUsersResponse>}
 */
const methodDescriptor_Authentication_AuthenticationUsers = new grpc.web.MethodDescriptor(
  '/authentication.Authentication/AuthenticationUsers',
  grpc.web.MethodType.UNARY,
  rpc$users_authentication_pb.AuthenticationUsersRequest,
  rpc$users_authentication_pb.AuthenticationUsersResponse,
  /**
   * @param {!proto.authentication.AuthenticationUsersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$users_authentication_pb.AuthenticationUsersResponse.deserializeBinary
);


/**
 * @param {!proto.authentication.AuthenticationUsersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.authentication.AuthenticationUsersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.authentication.AuthenticationUsersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.authentication.AuthenticationClient.prototype.authenticationUsers =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationUsers',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationUsers,
      callback);
};


/**
 * @param {!proto.authentication.AuthenticationUsersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.authentication.AuthenticationUsersResponse>}
 *     Promise that resolves to the response
 */
proto.authentication.AuthenticationPromiseClient.prototype.authenticationUsers =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationUsers',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationUsers);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.authentication.AuthenticationUserRequest,
 *   !proto.authentication.AuthenticationUserResponse>}
 */
const methodDescriptor_Authentication_AuthenticationUser = new grpc.web.MethodDescriptor(
  '/authentication.Authentication/AuthenticationUser',
  grpc.web.MethodType.UNARY,
  rpc$users_authentication_pb.AuthenticationUserRequest,
  rpc$users_authentication_pb.AuthenticationUserResponse,
  /**
   * @param {!proto.authentication.AuthenticationUserRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  rpc$users_authentication_pb.AuthenticationUserResponse.deserializeBinary
);


/**
 * @param {!proto.authentication.AuthenticationUserRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.authentication.AuthenticationUserResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.authentication.AuthenticationUserResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.authentication.AuthenticationClient.prototype.authenticationUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationUser',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationUser,
      callback);
};


/**
 * @param {!proto.authentication.AuthenticationUserRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.authentication.AuthenticationUserResponse>}
 *     Promise that resolves to the response
 */
proto.authentication.AuthenticationPromiseClient.prototype.authenticationUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/authentication.Authentication/AuthenticationUser',
      request,
      metadata || {},
      methodDescriptor_Authentication_AuthenticationUser);
};


module.exports = proto.authentication;

