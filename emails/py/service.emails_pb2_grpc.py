# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from rpc_health import emails_pb2 as rpc__health_dot_emails__pb2
from rpc_send import emails_pb2 as rpc__send_dot_emails__pb2


class EmailsStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.EmailsHealth = channel.unary_unary(
        '/emails.Emails/EmailsHealth',
        request_serializer=rpc__health_dot_emails__pb2.EmailsHealthRequest.SerializeToString,
        response_deserializer=rpc__health_dot_emails__pb2.EmailsHealthResponse.FromString,
        )
    self.EmailsSendMail = channel.unary_unary(
        '/emails.Emails/EmailsSendMail',
        request_serializer=rpc__send_dot_emails__pb2.EmailsSendMailRequest.SerializeToString,
        response_deserializer=rpc__send_dot_emails__pb2.EmailsSendMailResponse.FromString,
        )


class EmailsServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def EmailsHealth(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EmailsSendMail(self, request, context):
    """------------------------------------------------------------ SendEmail
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_EmailsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'EmailsHealth': grpc.unary_unary_rpc_method_handler(
          servicer.EmailsHealth,
          request_deserializer=rpc__health_dot_emails__pb2.EmailsHealthRequest.FromString,
          response_serializer=rpc__health_dot_emails__pb2.EmailsHealthResponse.SerializeToString,
      ),
      'EmailsSendMail': grpc.unary_unary_rpc_method_handler(
          servicer.EmailsSendMail,
          request_deserializer=rpc__send_dot_emails__pb2.EmailsSendMailRequest.FromString,
          response_serializer=rpc__send_dot_emails__pb2.EmailsSendMailResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'emails.Emails', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
