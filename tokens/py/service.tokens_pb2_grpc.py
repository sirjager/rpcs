# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from rpc_create import tokens_pb2 as rpc__create_dot_tokens__pb2
from rpc_health import tokens_pb2 as rpc__health_dot_tokens__pb2
from rpc_verify import tokens_pb2 as rpc__verify_dot_tokens__pb2
from rpc_welcome import tokens_pb2 as rpc__welcome_dot_tokens__pb2


class TokensStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TokensWelcome = channel.unary_unary(
                '/tokens.Tokens/TokensWelcome',
                request_serializer=rpc__welcome_dot_tokens__pb2.TokensWelcomeRequest.SerializeToString,
                response_deserializer=rpc__welcome_dot_tokens__pb2.TokensWelcomeResponse.FromString,
                )
        self.TokensHealth = channel.unary_unary(
                '/tokens.Tokens/TokensHealth',
                request_serializer=rpc__health_dot_tokens__pb2.TokensHealthRequest.SerializeToString,
                response_deserializer=rpc__health_dot_tokens__pb2.TokensHealthResponse.FromString,
                )
        self.TokensCreate = channel.unary_unary(
                '/tokens.Tokens/TokensCreate',
                request_serializer=rpc__create_dot_tokens__pb2.TokensCreateRequest.SerializeToString,
                response_deserializer=rpc__create_dot_tokens__pb2.TokensCreateResponse.FromString,
                )
        self.TokensVerify = channel.unary_unary(
                '/tokens.Tokens/TokensVerify',
                request_serializer=rpc__verify_dot_tokens__pb2.TokensVerifyRequest.SerializeToString,
                response_deserializer=rpc__verify_dot_tokens__pb2.TokensVerifyResponse.FromString,
                )


class TokensServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TokensWelcome(self, request, context):
        """------------------------------------------------------ System
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TokensHealth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TokensCreate(self, request, context):
        """------------------------------------------------------------ Create
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TokensVerify(self, request, context):
        """------------------------------------------------------------ Verify
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TokensServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TokensWelcome': grpc.unary_unary_rpc_method_handler(
                    servicer.TokensWelcome,
                    request_deserializer=rpc__welcome_dot_tokens__pb2.TokensWelcomeRequest.FromString,
                    response_serializer=rpc__welcome_dot_tokens__pb2.TokensWelcomeResponse.SerializeToString,
            ),
            'TokensHealth': grpc.unary_unary_rpc_method_handler(
                    servicer.TokensHealth,
                    request_deserializer=rpc__health_dot_tokens__pb2.TokensHealthRequest.FromString,
                    response_serializer=rpc__health_dot_tokens__pb2.TokensHealthResponse.SerializeToString,
            ),
            'TokensCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.TokensCreate,
                    request_deserializer=rpc__create_dot_tokens__pb2.TokensCreateRequest.FromString,
                    response_serializer=rpc__create_dot_tokens__pb2.TokensCreateResponse.SerializeToString,
            ),
            'TokensVerify': grpc.unary_unary_rpc_method_handler(
                    servicer.TokensVerify,
                    request_deserializer=rpc__verify_dot_tokens__pb2.TokensVerifyRequest.FromString,
                    response_serializer=rpc__verify_dot_tokens__pb2.TokensVerifyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tokens.Tokens', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Tokens(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TokensWelcome(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tokens.Tokens/TokensWelcome',
            rpc__welcome_dot_tokens__pb2.TokensWelcomeRequest.SerializeToString,
            rpc__welcome_dot_tokens__pb2.TokensWelcomeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TokensHealth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tokens.Tokens/TokensHealth',
            rpc__health_dot_tokens__pb2.TokensHealthRequest.SerializeToString,
            rpc__health_dot_tokens__pb2.TokensHealthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TokensCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tokens.Tokens/TokensCreate',
            rpc__create_dot_tokens__pb2.TokensCreateRequest.SerializeToString,
            rpc__create_dot_tokens__pb2.TokensCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TokensVerify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tokens.Tokens/TokensVerify',
            rpc__verify_dot_tokens__pb2.TokensVerifyRequest.SerializeToString,
            rpc__verify_dot_tokens__pb2.TokensVerifyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
