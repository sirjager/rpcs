# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import rpc_delete_pb2 as rpc__delete__pb2
import rpc_health_pb2 as rpc__health__pb2
import rpc_ip_pb2 as rpc__ip__pb2
import rpc_login_pb2 as rpc__login__pb2
import rpc_logout_pb2 as rpc__logout__pb2
import rpc_recover_pb2 as rpc__recover__pb2
import rpc_refresh_pb2 as rpc__refresh__pb2
import rpc_register_pb2 as rpc__register__pb2
import rpc_verify_pb2 as rpc__verify__pb2
import rpc_welcome_pb2 as rpc__welcome__pb2


class TrueAuthStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Welcome = channel.unary_unary(
                '/trueauth.TrueAuth/Welcome',
                request_serializer=rpc__welcome__pb2.WelcomeRequest.SerializeToString,
                response_deserializer=rpc__welcome__pb2.WelcomeResponse.FromString,
                )
        self.Health = channel.unary_unary(
                '/trueauth.TrueAuth/Health',
                request_serializer=rpc__health__pb2.HealthRequest.SerializeToString,
                response_deserializer=rpc__health__pb2.HealthResponse.FromString,
                )
        self.Register = channel.unary_unary(
                '/trueauth.TrueAuth/Register',
                request_serializer=rpc__register__pb2.RegisterRequest.SerializeToString,
                response_deserializer=rpc__register__pb2.RegisterResponse.FromString,
                )
        self.Login = channel.unary_unary(
                '/trueauth.TrueAuth/Login',
                request_serializer=rpc__login__pb2.LoginRequest.SerializeToString,
                response_deserializer=rpc__login__pb2.LoginResponse.FromString,
                )
        self.VerifyEmail = channel.unary_unary(
                '/trueauth.TrueAuth/VerifyEmail',
                request_serializer=rpc__verify__pb2.VerifyEmailRequest.SerializeToString,
                response_deserializer=rpc__verify__pb2.VerifyEmailResponse.FromString,
                )
        self.Logout = channel.unary_unary(
                '/trueauth.TrueAuth/Logout',
                request_serializer=rpc__logout__pb2.LogoutRequest.SerializeToString,
                response_deserializer=rpc__logout__pb2.LogoutResponse.FromString,
                )
        self.RefreshToken = channel.unary_unary(
                '/trueauth.TrueAuth/RefreshToken',
                request_serializer=rpc__refresh__pb2.RefreshTokenRequest.SerializeToString,
                response_deserializer=rpc__refresh__pb2.RefreshTokenResponse.FromString,
                )
        self.Recover = channel.unary_unary(
                '/trueauth.TrueAuth/Recover',
                request_serializer=rpc__recover__pb2.RecoverRequest.SerializeToString,
                response_deserializer=rpc__recover__pb2.RecoverResponse.FromString,
                )
        self.DeleteAccount = channel.unary_unary(
                '/trueauth.TrueAuth/DeleteAccount',
                request_serializer=rpc__delete__pb2.DeleteAccountRequest.SerializeToString,
                response_deserializer=rpc__delete__pb2.DeleteAccountResponse.FromString,
                )
        self.AllowIPAddress = channel.unary_unary(
                '/trueauth.TrueAuth/AllowIPAddress',
                request_serializer=rpc__ip__pb2.AllowIPAddressRequest.SerializeToString,
                response_deserializer=rpc__ip__pb2.AllowIPAddressResponse.FromString,
                )


class TrueAuthServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Welcome(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Health(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Recover(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AllowIPAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TrueAuthServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Welcome': grpc.unary_unary_rpc_method_handler(
                    servicer.Welcome,
                    request_deserializer=rpc__welcome__pb2.WelcomeRequest.FromString,
                    response_serializer=rpc__welcome__pb2.WelcomeResponse.SerializeToString,
            ),
            'Health': grpc.unary_unary_rpc_method_handler(
                    servicer.Health,
                    request_deserializer=rpc__health__pb2.HealthRequest.FromString,
                    response_serializer=rpc__health__pb2.HealthResponse.SerializeToString,
            ),
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=rpc__register__pb2.RegisterRequest.FromString,
                    response_serializer=rpc__register__pb2.RegisterResponse.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=rpc__login__pb2.LoginRequest.FromString,
                    response_serializer=rpc__login__pb2.LoginResponse.SerializeToString,
            ),
            'VerifyEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyEmail,
                    request_deserializer=rpc__verify__pb2.VerifyEmailRequest.FromString,
                    response_serializer=rpc__verify__pb2.VerifyEmailResponse.SerializeToString,
            ),
            'Logout': grpc.unary_unary_rpc_method_handler(
                    servicer.Logout,
                    request_deserializer=rpc__logout__pb2.LogoutRequest.FromString,
                    response_serializer=rpc__logout__pb2.LogoutResponse.SerializeToString,
            ),
            'RefreshToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshToken,
                    request_deserializer=rpc__refresh__pb2.RefreshTokenRequest.FromString,
                    response_serializer=rpc__refresh__pb2.RefreshTokenResponse.SerializeToString,
            ),
            'Recover': grpc.unary_unary_rpc_method_handler(
                    servicer.Recover,
                    request_deserializer=rpc__recover__pb2.RecoverRequest.FromString,
                    response_serializer=rpc__recover__pb2.RecoverResponse.SerializeToString,
            ),
            'DeleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAccount,
                    request_deserializer=rpc__delete__pb2.DeleteAccountRequest.FromString,
                    response_serializer=rpc__delete__pb2.DeleteAccountResponse.SerializeToString,
            ),
            'AllowIPAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.AllowIPAddress,
                    request_deserializer=rpc__ip__pb2.AllowIPAddressRequest.FromString,
                    response_serializer=rpc__ip__pb2.AllowIPAddressResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'trueauth.TrueAuth', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TrueAuth(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Welcome(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trueauth.TrueAuth/Welcome',
            rpc__welcome__pb2.WelcomeRequest.SerializeToString,
            rpc__welcome__pb2.WelcomeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Health(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trueauth.TrueAuth/Health',
            rpc__health__pb2.HealthRequest.SerializeToString,
            rpc__health__pb2.HealthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trueauth.TrueAuth/Register',
            rpc__register__pb2.RegisterRequest.SerializeToString,
            rpc__register__pb2.RegisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trueauth.TrueAuth/Login',
            rpc__login__pb2.LoginRequest.SerializeToString,
            rpc__login__pb2.LoginResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trueauth.TrueAuth/VerifyEmail',
            rpc__verify__pb2.VerifyEmailRequest.SerializeToString,
            rpc__verify__pb2.VerifyEmailResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trueauth.TrueAuth/Logout',
            rpc__logout__pb2.LogoutRequest.SerializeToString,
            rpc__logout__pb2.LogoutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RefreshToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trueauth.TrueAuth/RefreshToken',
            rpc__refresh__pb2.RefreshTokenRequest.SerializeToString,
            rpc__refresh__pb2.RefreshTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Recover(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trueauth.TrueAuth/Recover',
            rpc__recover__pb2.RecoverRequest.SerializeToString,
            rpc__recover__pb2.RecoverResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trueauth.TrueAuth/DeleteAccount',
            rpc__delete__pb2.DeleteAccountRequest.SerializeToString,
            rpc__delete__pb2.DeleteAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AllowIPAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trueauth.TrueAuth/AllowIPAddress',
            rpc__ip__pb2.AllowIPAddressRequest.SerializeToString,
            rpc__ip__pb2.AllowIPAddressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
